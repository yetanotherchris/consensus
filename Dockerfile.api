# Multi-stage Dockerfile for Consensus.Api with React frontend

# Stage 1: Build React frontend
FROM node:20-alpine AS frontend-build
WORKDIR /app/frontend

# Copy frontend package files
COPY src/Consensus.Web/package*.json ./

# Install dependencies
RUN npm ci

# Copy frontend source
COPY src/Consensus.Web/ ./

# Build frontend
RUN npm run build

# Stage 2: Build .NET API
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS api-build
WORKDIR /src

# Copy solution and project files
COPY consensus.sln .
COPY Directory.Packages.props .
COPY src/Consensus.Api/Consensus.Api.csproj src/Consensus.Api/
COPY src/Consensus.Core/Consensus.Core.csproj src/Consensus.Core/

# Restore dependencies
RUN dotnet restore src/Consensus.Api/Consensus.Api.csproj

# Copy all source code
COPY src/ src/

# Build and publish the application
RUN dotnet publish src/Consensus.Api/Consensus.Api.csproj \
    -c Release \
    -o /app/publish \
    --no-restore

# Stage 3: Runtime
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS runtime
WORKDIR /app

# Copy the published API
COPY --from=api-build /app/publish .

# Copy the built frontend into wwwroot
COPY --from=frontend-build /app/frontend/dist ./wwwroot

# Expose ports
EXPOSE 8080
EXPOSE 8081

# Set environment variables
ENV ASPNETCORE_URLS=http://+:8080
ENV ASPNETCORE_ENVIRONMENT=Production

ENTRYPOINT ["dotnet", "Consensus.Api.dll"]
